# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuracion overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:

    # Configuración de la BASE DE DATOS
    datasource:
        dataSourceClassName: org.postgresql.ds.PGSimpleDataSource
         # Primera opción sin incluir ningún parámetro y usando JAVA_OPTS
        url: jdbc:postgresql://ggal1701.c0gqvbyobsaf.us-east-2.rds.amazonaws.com:5432/ggal1701
        username: postgres
        password: postgres
#        Segunda opción con variables de entorno:
#        url: ${JDBC_URL}
#        username: ${DATABASE_USERNAME}
#        password: ${DATABASE_PASSWORD}
        maximum-pool-size: 5

    application:
        url: http://localhost:8080
    profiles:
        active: prod
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false

server:
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json


# Primera respuesta SO, mal pasados los JAVAOPTS:
# sudo docker run --network public --link pg --name tm -e JAVA_OPTS="-Dspring.datasource.url=jdbc:postgresql://pg:5432/ggal1701 -Dspring.datasource.username=postgres -Dspring.datasource.password=postgres" -p 9000:8080 worker
# Segunda opción SO:
# docker run --network public --link pg --name tm -e JDBC_URL="jdbc:postgresql://pg:5432/ggal1701" -e DATABASE_USERNAME="postgres" -e DATABASE_PASSWORD="postgres" -p 9000:8080 worker
